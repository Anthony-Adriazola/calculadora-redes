@page "/fetchdata"
@using CalculadoraRedes.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1 style="color: var(--text-color);">Weather forecast</h1>

<p style="color: var(--text-color);">This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p style="color: var(--text-color);"><em>Loading...</em></p>
}
else
{
    <table class="table" style="background-color: var(--secondary-color); color: var(--text-color); border: 1px solid var(--border-color);">
        <thead>
            <tr>
                <th style="color: var(--text-color);">Date</th>
                <th style="color: var(--text-color);">Temp. (C)</th>
                <th style="color: var(--text-color);">Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }
}
