@using CalculadoraRedes.Client.Services

@page "/historial"
@inject HistorialService HistorialService

<h3>Historial de c√°lculos</h3>

@if (!HistorialService.Historial.Any())
{
    <p>No hay c√°lculos registrados.</p>
}
else
{
    <button @onclick="LimpiarHistorial">üóëÔ∏è Limpiar historial</button>

    <ul>
        @foreach (var (item, index) in HistorialService.Historial.Select((value, i) => (value, i)))
        {
            <li style="margin-bottom: 1rem;">
                <div>Splitters: @($"{item.totalSplitters:F2} dB")</div>
                <div>Fusiones: @($"{item.AtenuacionFusiones:F2} dB") (@($"{item.Fusiones} x 0.03"))</div>
                <div>Acopladores: @($"{item.AtenuacionAcopladores:F2} dB") (@($"{item.Acopladores} x 0.5"))</div>
                <div>Fibra √≥ptica: @($"{item.AtenuacionFibra:F2} dB") (@($"{item.LongitudCable}/1000 x 0.2 dB"))</div>
                <strong>Atenuaci√≥n total:</strong> @($"{item.AtenuacionTotal:F2} dB") <br />
                <strong>Potencia recibida:</strong> @($"{item.PotenciaRecibida:F2} dBm") <br />
                <button @onclick="@(() => EliminarItem(index))">‚ùå Eliminar</button>
            </li>
            <hr />
        }
    </ul>
}

@code {
    void EliminarItem(int index)
    {
        HistorialService.Eliminar(index);
    }
    void LimpiarHistorial()
    {
        HistorialService.Limpiar();
        StateHasChanged();
    }
}
